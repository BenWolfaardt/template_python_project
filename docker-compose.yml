services:
  app:
    build:
      context: .
      dockerfile: ci/app/Dockerfile
    container_name: app
    restart: on-failure
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 1s
      timeout: 5s
      retries: 10
    depends_on:
      - database
    ports:
      - "8080:80"
    networks:
      - network

  database:
    build:
      context: .
      dockerfile: ci/database/Dockerfile
      args:
        USERNAME: ${CONTAINERISED_DB_USER}
        PASSWORD: ${CONTAINERISED_DB_PASSWORD}
        DB_NAME: ${CONTAINERISED_DB_NAME}
    container_name: db
    restart: unless-stopped
#    environment:
#      POSTGRES_HOST_AUTH_METHOD: reject
    # TODO have the db name dynamic here as well
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d database" ]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  database:
